"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Locator_1 = __importDefault(require("../classes/Locator"));
/**
 * Function to check the type of an expression
 * @param data The object we are checking
 * @param rule A specific rule to compare the object to (more about this later)
 * @param name The name of the root object when logs display errors. Defaults to `*` as root
 *
 * @return object The result of whether the object matched the rule
 */
exports.default = (data, rule, name = "*") => {
    const locator = new Locator_1.default([name]);
    const result = rule.validate(data, locator);
    if (result.success === result.errors.length > 0) {
        console.warn("Error with typechecking. Create an issue on https://github.com/zS1L3NT/ts-npm-validate-any with the PATTERN AND the data below", result.errors);
    }
    return result;
};
