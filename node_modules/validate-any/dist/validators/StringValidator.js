"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Validator_1 = __importDefault(require("../classes/Validator"));
class StringValidator extends Validator_1.default {
    static NO_REGEX_MATCH = `Value does not match the defined RegExp pattern`;
    static NOT_AMONG_STRINGS = `Value doesn't match anything in the defined set of strings`;
    rules;
    constructor(rules) {
        super();
        this.rules = rules;
        if (rules.length === 0) {
            this.schema = `{"$type":"string"}`;
        }
        else {
            this.schema = `{"$type":"string","$values":[${rules
                .map(rule => `"${rule}"`)
                .join(",")}]}`;
        }
    }
    validate(data, locator) {
        if (typeof data !== "string") {
            return this.failure(locator, Validator_1.default.WRONG_TYPE, this, data);
        }
        if (this.rules[0] instanceof RegExp) {
            const match = data.match(this.rules[0])
                ? data.match(this.rules[0]).length > 0
                : false;
            if (!match) {
                return this.failure(locator, StringValidator.NO_REGEX_MATCH, this, data);
            }
        }
        else if (this.rules.length > 0) {
            if (!this.rules.includes(data)) {
                return this.failure(locator, StringValidator.NOT_AMONG_STRINGS, this, data);
            }
        }
        return this.success(data);
    }
}
exports.default = StringValidator;
