"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Validator_1 = __importDefault(require("../classes/Validator"));
class ListValidator extends Validator_1.default {
    validators;
    constructor(validators) {
        super();
        this.validators = validators;
        if (validators.length === 0) {
            this.schema = `{"$type":"list"}`;
        }
        else {
            const schemas = validators.map(validator => validator.schema);
            this.schema = `{"$type":"list","$values":[${schemas.join(",")}]}`;
        }
    }
    validate(data, locator) {
        if (!Array.isArray(data)) {
            return this.failure(locator, Validator_1.default.WRONG_TYPE, this, data);
        }
        if (this.validators.length === 0)
            return this.success(data);
        let result = this.success(data);
        for (const i in Array(data.length).fill(0)) {
            const traversedLocator = locator.traverse(`[${i}]`);
            const results = this.validators.map(validator => validator.validate(data[i], traversedLocator));
            if (results.every(r => !r.success)) {
                result = {
                    success: false,
                    errors: [
                        ...result.errors,
                        ...results.map(r => r.errors).flat()
                    ],
                    data: undefined
                };
            }
        }
        return result;
    }
}
exports.default = ListValidator;
