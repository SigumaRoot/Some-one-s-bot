import Locator from "./Locator";
import { iValidationResult } from "..";
export default abstract class Validator<T> {
    static readonly WRONG_TYPE = "Value is not of the correct type";
    static readonly WRONG_VALUE = "Value is not allowed";
    schema: string;
    abstract validate(data: any, locator: Locator): iValidationResult<T>;
    /**
     * Schema of the validator as a JSON object
     *
     * @returns JSON Schema of the object
     */
    getSchema(): any;
    protected success(data: T): iValidationResult<T>;
    protected failure(locator: Locator, message: string, validator: Validator<any>, data: any): iValidationResult<T>;
    protected throw(locator: Locator, message: string): void;
}
